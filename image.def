Bootstrap: oras
From: ghcr.io/g5t/stacktainer/ecdc:4.0

%arguments
plumber_version="0.11.0"
niess_version="0.0.7"
mcpl_version="2.2.0"
ncrystal_version="4.2.0"
readout_version="0.3.2"


%files
launch-writer.sh /usr/bin/launch-writer
launch-forwarder.sh /usr/bin/launch-forwarder
splitrun-nexus-impl.sh /usr/bin/splitrun-nexus-impl
splitrun-nexus.sh /usr/bin/splitrun-nexus


%post
dnf install -y gcc g++ git uuid python3.12-pyyaml
python -m pip install cmake conan
git clone -b "v{{ readout_version }}" https://github.com/g5t/mcstas-readout-master.git /readout/repo
cmake -S /readout/repo -B /readout/build -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=/
cmake --build /readout/build --target install -j
rm -rf /readout /root/.conan*

python -m pip install \
  ephemeral-port-reserve \
  "niess=={{ niess_version }}" \
  "mccode-plumber=={{ plumber_version }}" \
  "ncrystal=={{ ncrystal_version }}" \
  "mcpl=={{ mcpl_version }}"
chmod +x /usr/bin/launch-writer /usr/bin/launch-forwarder /usr/bin/splitrun-nexus /usr/bin/splitrun-nexus-impl
echo "export MCCODEANTLR_FLAGS__MCPL='$(mcpl-config --show buildflags)'" >> $APPTAINER_ENVIRONMENT
echo "export MCCODEANTLR_FLAGS__NCRYSTAL='$(ncrystal-config --show buildflags)'" >> $APPTAINER_ENVIRONMENT

dnf clean all

%environment
export LC_ALL=C
export RESTAGE_FIXED=${RESTAGE_FIXED:-''}
export MCCODEANTLR_MCCODE_POOCH__TAG="v3.5.32"

%help
Data collection utilities for the European Spallation Source.
Event Formation Unit binaries:
	bifrost  - the indirect geometry time-of-flight spectrometer, BIFROST
	cbm      - beam monitors used a multiple instruments
	cspec    - the direct geometry time-of-flight spectrometer, CSPEC
	dream    - the powder diffractometer, DREAM
	freia    - the reflectometer, FREIA
	loki     - the small angle scattering diffractometer, LOKI
	miracles - the back scattering time-of-flight spectrometer, MIRACLES
	nmx      - the macromollecular single crystal diffractometer, NMX
	timepix3 - the TimePix3 clustering photon imaging detector, used at ODIN
	trex     - the direct geometry time-of-flight spectrometer, TREX
File Writer binaries:
	kafkfa-to-nexus - the worker responsible for writing streams to NeXus files
Readout utilities:
	readout-config        - Retrieve information needed to use the McStas-to-EFU Readout Master Module mechanism
        readout-replay        - Read and resend stored weighted neutron rays following a McStas simulation
McCode Plumber programs:
	mc-epics              - Configure and run an EPICS mailbox server to host instrument setting parameter value updates 
	mp-epics-update       - Send 'key value' pair updates to a running EPICS mailbox server
	mp-forwarder-setup    - Inform the Forwarder which instrument setting parameters should be forwarded to Kafka
	mp-forwarder-teardown - Inform the Forwarder to stop sending instrument setting parameter updates
	mp-insert-hdf5-instr  - Add a serialized form of the provided instrument to a new or existing HDF5 file
	mp-register-topics    - Ensure that the specified stream topic names exist on a configurable Kafka service
	mp-splitrun           - Use 'restage.splitrun' with McCode histogram (monitor) sending callbacks for Kafka integration
	mp-writer-from        - Print the current time as needed to specify, e.g., the start time in a call to 'mp-writer-write'
	mp-writer-kill        - Send a File Writer command to stop a specified job
	mp-writer-killall     - Send a File Writer command to stop all jobs
	mp-writer-list        - List known File Writer jobs
	mp-writer-wait        - Sleep until the specified File Writer job has finished
	mp-writer-write       - Send a File Writer command to start a job, controlling start and optionally stop time
MCPL binaries:
	mcpltool              - tool for examining and modifying Monte Carlo Particle List (MCPL) file(s)
	mcpl-config           - configuration information for the MCPL installation
NCrystal binaries:
        ncrystal_mcstasunion  - tool to construct material descriptions for McStas or McStasScript
	ncrystal_*            - too numerous to enumerate here, see homepage
	ncrystal-config       - configuration information for the NCrystal installation 
Utilities:
	launch-writer         - create a new kafka-to-nexus file writer, optionally using some sensible defaults
	launch-forwarder      - create a EPICS to Kafka forwarder, optionally using some sensible defaults
        splitrun-nexus        - orchestrate the simulation of in instrument and the ECDC data-pipeline producing a NeXus HDF5 file
	splitrun-nexus-impl   - used by splitrun-nexus to move some implementation details behind the scenes
	

%test
function test_revision(){
  expected="$2"
  for b in "${@:3}"
  do
    echo -n "Check $b version ... "
    res=$($b --version)
    if (echo $res | grep -q "${expected}")
    then
       echo "success!"
    else
       echo "${expected} not in $res"
       return 1
    fi
  done
}
function test_help(){
  res=0
  for b in "${@}"
  do
    echo -n "Check that ${b} provides '--help' ... "
    ret=$($b --help)
    exc=$?
    test $exc -eq 0 && echo "yes!" || echo "no!"
    res=$exc||$res
  done
  return $res
}
test_result=0
test_revision $(echo ${EFU_VERSION} | tr '-' ' ')  bifrost cbm cspec dream freia loki miracles nmx timepix3 trex || test_result=1
test_revision Readout {{ readout_version }} readout-config || test_result=1
test_revision MCPL {{ mcpl_version }} mcpl-config || test_result=1
test_revision NCrystal {{ ncrystal_version }} ncrystal-config || test_result=1
test_revision $(echo ${WRITER_VERSION} | tr '-' ' ') kafka-to-nexus || test_result=1
test_help file-maker template-maker readout-replay || test_result=1
exit ${test_result}
